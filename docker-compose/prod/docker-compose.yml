services:
  accountsdb:
    container_name: accountsdb
    ports:
      - 3310:3306
    environment:
      MYSQL_DATABASE: accountsDB
    extends:
      file: common-config.yml
      service: microservices-db-config

  loansdb:
    container_name: loansdb
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: loansdb
    extends:
      file: common-config.yml
      service: microservices-db-config

  cardsdb:
    container_name: cardsdb
    ports:
      - 3308:3306
    environment:
      MYSQL_DATABASE: cardsdb
    extends:
      file: common-config.yml
      service: microservices-db-config

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping  | grep PONG || exit 1
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service


  configserver:
    image: kushanxp/configserver:s10
    container_name: configserver_ms
    ports:
      - 8071:8071
    healthcheck:
      test: curl --fail http://localhost:8071/actuator/health/readiness | grep "UP" || exit 1
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5
    extends:
      file: common-config.yml
      service: microservices-base-config

  eurekaserver:
    image: kushanxp/eurekaserver:s10
    container_name: eurekaserver_ms
    ports:
      - 8070:8070
    healthcheck:
      test: curl --fail http://localhost:8070/actuator/health/readiness | grep "UP" || exit 1
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5
    extends:
      file: common-config.yml
      service: microservices-configserver-config
    environment:
      SPRING_APPLICATION_NAME: eurekaserver


  accounts:
    image: kushanxp/accounts:s10
    container_name: accounts_ms
    ports:
      - 8080:8080
    healthcheck:
      test: curl --fail http://localhost:8080/actuator/health/readiness | grep "UP" || exit 1
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_DATASOURCE_URL: jdbc:mysql://accountsdb:3306/accountsDB
    extends:
      file: common-config.yml
      service: microservices-eurekaserver-config
    depends_on:
      accountsdb:
        condition: service_healthy

  loans:
    image: kushanxp/loans:s10
    container_name: loans_ms
    ports:
      - 8090:8090
    healthcheck:
      test: curl --fail http://localhost:8090/actuator/health/readiness | grep "UP" || exit 1
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5
    environment:
      SPRING_APPLICATION_NAME: loans
      SPRING_DATASOURCE_URL: jdbc:mysql://loansdb:3306/loansdb
    extends:
      file: common-config.yml
      service: microservices-eurekaserver-config
    depends_on:
      loansdb:
        condition: service_healthy

  cards:
    image: kushanxp/cards:s10
    container_name: cards_ms
    ports:
      - 9000:9000
    healthcheck:
      test: curl --fail http://localhost:9000/actuator/health/readiness | grep "UP" || exit 1
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5
    environment:
      SPRING_APPLICATION_NAME: cards
      SPRING_DATASOURCE_URL: jdbc:mysql://cardsdb:3306/cardsdb
    extends:
      file: common-config.yml
      service: microservices-eurekaserver-config
    depends_on:
      cardsdb:
        condition: service_healthy
        
  gatewayserver:
    image: kushanxp/gatewayserver:s10
    container_name: gatewayserver_ms
    ports:
      - 8072:8072
    environment:
      SPRING_APPLICATION_NAME: gatewayserver
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_CONNECT_TIMEOUT: 10000
      SPRING_DATA_REDIS_TIMEOUT: 1000
    extends:
      file: common-config.yml
      service: microservices-eurekaserver-config
    depends_on:
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy

networks:
  micro_network:
    driver: bridge
